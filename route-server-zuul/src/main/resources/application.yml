server:
  port: 10103

spring:
  application:
    name: route-server-zuul
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    deserialization:
      #允许对象忽略json中不存在的属性
      fail_on_unknown_properties: false
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: true
        format_sql: true
  datasource:
    #初始化数据结构/数据
    schema: classpath:h2/schema.sql
    data: classpath:h2/test-data.sql
zuul:
  ignored-services: '*'
  prefix: /api
  routes: #路由的配置是个Map，可以配置多个
    physical-person-meta: /person/**
    physical-book-meta: /book/**
    physical-order-meta: /order/**
    token:  #token结尾的请求，都转发到http://localhost:10402认证服务器地址
      url:  http://${AUTHENTICATION_HOST:localhost}:${AUTHENTICATION_PORT:10402}
  sensitive-headers:  null  #设置敏感头设置为空，Authorization等请求头的请求，都往后转发
  ratelimit:
    key-prefix: rate
    enabled: true
    repository: REDIS
    default-policy-list:
      #    ########### 如下的配置就是说：每1秒内不能超过2个请求，2个请求时间加起来不能超过1秒(quota)############
      - limit: 2 #optional - request number limit per refresh interval window
        quota: 1 #optional - request time limit per refresh interval window (in seconds)
        refresh-interval: 10 #时间窗口 (in seconds)
        type: ##根据什么控制流量，可以组合使用，如url、httpmethod组合，就会把 /orders的get和post请求分开处理
          - url
          - httpmethod
        #- user  #根据用户控制需要Security支持，（一般不用）
        #- origin #根据客户端的ip控制

security:
  oauth2:
    resource:
      jwt:
#        key-uri: http://${AUTHENTICATION_HOST:localhost}:${AUTHENTICATION_PORT:10402}/oauth/token_key #获取解析jwt，验签名key的路径
        key-value: ${SIGNING_KEY:ynding}
    client:
      client-id: gateway #获取验签key需要身份认证，这里是网关的clientId
      client-secret: 123456 #获取验签key需要身份认证，这里是网关的secret

#这样才能访问 /actuator/bus-refresh
management:
  endpoints:
    web:
      exposure:
        include: '*'
      cors:
        allowed-origins: "*"
        allowed-methods: "*"

logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.ynding.cloud: DEBUG