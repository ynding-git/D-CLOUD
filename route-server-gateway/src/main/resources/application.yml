server:
  port: 10104

spring:
  application:
    name: route-server-gateway
  main:
    allow-bean-definition-overriding: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    deserialization:
      #允许对象忽略json中不存在的属性
      fail_on_unknown_properties: false
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: true
        format_sql: true
  datasource:
    #初始化数据结构/数据
    schema: classpath:db/schema.sql
    data: classpath:db/test-data.sql
    initialization-mode: always
    #不加此配置，如果sql 执行失败会中断程序，如果想看sql的执行错误，可以把此去掉
    continue-on-error: true
  cloud:
    gateway:
      discovery:
        locator:
          lower-case-service-id: true  #gateway可以通过开启以下配置来打开根据服务的serviceId来匹配路由,默认是false大写
          enabled: true # 是否可以通过其他服务的serviceId来转发到具体的服务实例。默认为false
      routes:
        - id: auth-server-authentication
          uri: lb://auth-server-authentication
          predicates:
            - Path=/authentication/**
          filters:
            - StripPrefix=1
            # 限流过滤器，使用gateway内置令牌算法
            - name: RequestRateLimiter
              args:
                # 令牌桶每秒填充平均速率,即行等价于允许用户每秒处理多少个请求平均数
                redis-rate-limiter.replenishRate: 1
                # 令牌桶的容量，允许在一秒钟内完成的最大请求数
                redis-rate-limiter.burstCapacity: 2
                # 用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。
                key-resolver: "#{@apiKeyResolver}"
      default-filters:
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 2  #流速 每秒
            redis-rate-limiter.burstCapacity: 10   #令牌桶的容积
            rate-limiter: "#{@defaultRedisRateLimiter}"  #SPEL表达式去的对应的bean
            key-resolver: "#{@apiKeyResolver}" #SPEL表达式去的对应的bean
#网关白名单，无需要签权url
gate:
  ignore:
    urls: /oauth,/open,/login,/getToken

security:
  oauth2:
    resource:
      jwt:
#        key-uri: http://${AUTHENTICATION_HOST:localhost}:${AUTHENTICATION_PORT:10402}/oauth/token_key #获取解析jwt，验签名key的路径
        key-value: ${SIGNING_KEY:ynding}
    client:
      client-id: gateway #获取验签key需要身份认证，这里是网关的clientId
      client-secret: 123456 #获取验签key需要身份认证，这里是网关的secret

#这样才能访问 /actuator/bus-refresh
management:
  endpoints:
    web:
      exposure:
        include: '*'
      cors:
        allowed-origins: "*"
        allowed-methods: "*"

logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.ynding.cloud: DEBUG

dubbo:
  application:
    name: route-server-gateway-provider
  protocols:
    dubbo:
      port: 30104      # port 为协议端口（ -1 表示自增端口，从 20880 开始）
  cloud:
    subscribed-services: auth-server-authentication-provider,auth-server-admin-provider